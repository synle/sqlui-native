{
  "name": "sqlui-native",
  "version": "1.6.6",
  "description": "A minimal Electron application for SQL Databases",
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://localhost:3001",
  "homepage": "./",
  "build": {
    "appId": "io.synle.github.sqlui-native",
    "extends": null
  },
  "main": "main.js",
  "scripts": {
    "clean": "rimraf .cache .parcel-cache dist build mocked-db.sqlite && cpx package.json src/",
    "prestart": "npm run clean && npm run build",
    "prestart-webapp": "npm run prebuild",
    "prebuild": "npm run clean",
    "pretest": "npm run clean",
    "pretest-ci": "npm run pretest",
    "start": "npm run start-electron",
    "start-electron": "cross-env ENV_TYPE='electron-dev' cross-env ELECTRON_DISABLE_SECURITY_WARNINGS=true electron build/main.js",
    "start-webapp": "cross-env ENV_TYPE='mocked-server' SASS_PATH='./src/styles' react-scripts start",
    "start-mocked": "npx ts-node --project tsconfig-server.json mocked-server.ts",
    "build-binary": "cpx \"build/**/*\" . && electron-builder build --publish=never",
    "build-electron": "npx tsc --project tsconfig-electron.json && cpx package.json build",
    "build-react": "cross-env CI=\"\" SASS_PATH='./src/styles' react-scripts build",
    "build": "npm run build-react && npm run build-electron",
    "test": "jest",
    "test-ci": "cross-env CI=true jest __tests__",
    "test-react": "cross-env SASS_PATH='./src/styles' react-scripts test",
    "format": "npx prettier --config ./.prettierrc --write **/*.{ts,tsx,js,jsx,scss,yml,html} *.{json,MD}",
    "lint": "eslint --fix --ext .tsx --ext .ts src",
    "dist": "npm run build && npm run build-binary"
  },
  "repository": "https://github.com/synle/sqlui-native",
  "keywords": [
    "Electron",
    "SQL"
  ],
  "author": "Sy Le",
  "dependencies": {
    "@emotion/react": "^11.7.1",
    "@emotion/styled": "^11.6.0",
    "@mui/icons-material": "^5.3.1",
    "@mui/material": "^5.4.0",
    "@uiw/react-textarea-code-editor": "^1.4.15",
    "cassandra-driver": "^3.6.0",
    "connection-string-parser": "^1.0.4",
    "json-2-csv": "^3.17.0",
    "mariadb": "^2.5.5",
    "mysql2": "^2.3.3",
    "pg": "^8.7.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-query": "^3.34.12",
    "react-router-dom": "^6.2.1",
    "react-table": "^7.7.0",
    "sequelize": "^6.15.0",
    "sql-formatter": "^4.0.2",
    "sqlite3": "^5.0.2",
    "tedious": "^14.2.0"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^5.16.1",
    "@testing-library/react": "^12.1.2",
    "@testing-library/user-event": "^13.5.0",
    "@types/cassandra-driver": "^3.6.0",
    "@types/jest": "^27.4.0",
    "@types/react": "^17.0.38",
    "@types/react-dom": "^17.0.11",
    "@types/react-table": "^7.7.9",
    "body-parser": "^1.19.1",
    "cpx": "^1.5.0",
    "cross-env": "^7.0.3",
    "electron": "^17.0.0",
    "electron-builder": "^22.14.5",
    "eslint-plugin-unused-imports": "^2.0.0",
    "express": "^4.17.2",
    "jest": "^27.4.7",
    "react-scripts": "5.0.0",
    "rimraf": "^3.0.2",
    "sass": "^1.49.7",
    "ts-jest": "^27.1.3",
    "typescript": "^4.5.5",
    "web-vitals": "^2.1.4"
  }
}
