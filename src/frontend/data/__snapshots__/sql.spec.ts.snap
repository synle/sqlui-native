// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scripts AzureCosmosDBScripts 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Create Database",
    "query": "client
  .databases
  .create({
    id: 'database1'
  })",
  },
  Object {
    "formatter": "js",
    "label": "Create Database Container",
    "query": "client
  .database('database1')
  .containers
  .create({
    id: 'some_container_name'
  })",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Drop Database",
    "query": "client
  .database('database1')
  .delete()",
  },
  Object {
    "formatter": "js",
    "label": "Select All Columns",
    "query": "client
  .database('database1')
  .container('table1')
  .items
  .query({
    query: \`
  SELECT *
  FROM c
  OFFSET 0 LIMIT 200\`,
  })
  .fetchAll()",
  },
  Object {
    "formatter": "js",
    "label": "Select Specific Columns",
    "query": "client
  .database('database1')
  .container('table1')
  .items
  .query({
    query: \`
  SELECT c.id,
  c.column1,
  c.column2
  FROM c
  WHERE c.id = ''
  AND c.column1 = ''
  AND c.column2 = ''
  OFFSET 0 LIMIT 200\`,
  })
  .fetchAll()",
  },
  Object {
    "formatter": "js",
    "label": "Select By Id",
    "query": "client
  .database('database1')
  .container('table1')
  .items
  .query({
    query: \`
  SELECT *
  FROM c
  WHERE c.id = '123'\`,
  })
  .fetchAll()",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Read",
    "query": "client
  .database('database1')
  .container('table1')
  .item('some_id', 'some_partition_key')
  .read()",
  },
  Object {
    "formatter": "js",
    "label": "Insert",
    "query": "client
  .database('database1')
  .container('table1')
  .items
  .create({
    \\"id\\": \\"some_id\\"
  })",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "client
  .database('database1')
  .container('table1')
  .item('some_id', 'some_partition_key')
  .replace({
    \\"id\\": \\"some_id\\"
  })",
  },
  Object {
    "formatter": "js",
    "label": "Delete",
    "query": "client
  .database('database1')
  .container('table1')
  .item('some_id', 'some_partition_key')
  .delete()",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Raw Select All Columns SQL",
    "query": "SELECT
  *
FROM
  c",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Create Container",
    "query": "client
  .database('database1')
  .containers
  .create({
    id: 'table1'
  })",
  },
  Object {
    "formatter": "js",
    "label": "Drop Container",
    "query": "client
  .database('database1')
  .container('table1')
  .delete()",
  },
]
`;

exports[`Scripts CassandraScripts 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Keyspace",
    "query": "CREATE KEYSPACE IF NOT EXISTS some_keyspace WITH replication = { 'class': 'SimpleStrategy',
'replication_factor': 3 };",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Keyspace",
    "query": "DROP KEYSPACE IF EXISTS database1;",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  *
FROM
  table1
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (id, column1, column2)
VALUES
  ('_id_', '_column1_', '_column2_')",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
]
`;

exports[`Scripts MongodbScripts 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Create Database",
    "query": "db.createDatabase('database1')",
  },
  Object {
    "formatter": "js",
    "label": "Drop Database",
    "query": "db.dropDatabase()",
  },
  Object {
    "formatter": "js",
    "label": "Select All Columns",
    "query": "db.collection('table1')
  .find()
  .limit(200)
  .toArray();",
  },
  Object {
    "formatter": "js",
    "label": "Select Specific Columns",
    "query": "db.collection('table1')
  .find({
    \\"id\\": 123,
    \\"column1\\": 123,
    \\"column2\\": 123
  })
  .limit(200)
  .toArray();",
  },
  Object {
    "formatter": "js",
    "label": "Select Distinct",
    "query": "db.collection('table1')
  .distinct(
    'id', {
      \\"id\\": \\"\\",
      \\"column1\\": \\"\\",
      \\"column2\\": \\"\\"
    }
  )",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Insert",
    "query": "db.collection('table1')
  .insertMany([{
    \\"id\\": 123,
    \\"column1\\": 123,
    \\"column2\\": 123
  }]);",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "db.collection('table1')
  .update({
    \\"id\\": 123,
    \\"column1\\": 123,
    \\"column2\\": 123
  }, {
    $set: {
      \\"id\\": 123,
      \\"column1\\": 123,
      \\"column2\\": 123
    }
  });",
  },
  Object {
    "formatter": "js",
    "label": "Delete",
    "query": "db.collection('table1')
  .deleteMany({
    \\"id\\": 123,
    \\"column1\\": 123,
    \\"column2\\": 123
  });",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Create Collection",
    "query": "db.createCollection(\\"table1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Drop Collection",
    "query": "db.collection('table1')
  .drop()",
  },
]
`;

exports[`Scripts RedisScripts 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "formatter": "js",
    "label": "Set Value",
    "query": "db.set(\\"key\\", \\"value123\\")",
  },
  Object {
    "formatter": "js",
    "label": "Get Value by Key",
    "query": "db.get(\\"key\\")",
  },
  Object {
    "formatter": "js",
    "label": "Scan for keys",
    "query": "db.keys(\\"*\\")",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Hashset > Set Value",
    "query": "db.hSet(\\"hash_key1\\", \\"field1\\", \\"value1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Hashset > Get Value By Key",
    "query": "db.hGetAll(\\"hash_key1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Hashset > Values",
    "query": "db.hVals(\\"hash_key1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Hashset > Check if key exists",
    "query": "db.hExists(\\"hash_key1\\", \\"field1\\")",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "List > Get Items",
    "query": "db.lRange(\\"list_key1\\", 0, -1)",
  },
  Object {
    "formatter": "js",
    "label": "List > Push item to the front",
    "query": "db.lPush(\\"list_key1\\", \\"value\\")",
  },
  Object {
    "formatter": "js",
    "label": "List > Push item to the back",
    "query": "db.rPush(\\"list_key1\\", \\"value\\")",
  },
  Object {
    "formatter": "js",
    "label": "List > Delete item from the front",
    "query": "db.lPop(\\"list_key1\\")",
  },
  Object {
    "formatter": "js",
    "label": "List > Delete item from the back",
    "query": "db.rPop(\\"list_key1\\")",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Set > Get Items",
    "query": "db.sMembers(\\"set_key1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Set > Add Item",
    "query": "db.sAdd(\\"set_key1\\", \\"value1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Set > Is a member of set",
    "query": "db.sIsMember(\\"set_key1\\", \\"value1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Set > Total Size",
    "query": "db.sCard(\\"set_key1\\")",
  },
  Object {
    "formatter": "js",
    "label": "Set > Remove last item",
    "query": "db.sPop(\\"set_key1\\")",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Sorted Set > Get Items",
    "query": "db.zRange(\\"sorted_set_key1\\", 0, -1)",
  },
  Object {
    "formatter": "js",
    "label": "Sorted Set > Add Item",
    "query": "db.zAdd(\\"sorted_set_key1\\", [{
  score: 1,
  value: \\"some_value\\"
}])",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "js",
    "label": "Publish a message",
    "query": "db.publish(\\"pubsub_channel_key1\\", \\"some_message\\")",
  },
]
`;

exports[`Scripts RmdbScripts - mariadb 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Database",
    "query": "DROP DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Create Database",
    "query": "CREATE DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  *
FROM
  table1
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Count",
    "query": "SELECT
  COUNT(*)
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Distinct",
    "query": "SELECT
  DISTINCT column1
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (column1, column2)
VALUES
  ('_column1_', '_column2_')",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Table",
    "query": "CREATE TABLE table1 (
  id INT PRIMARY KEY NOT NULL,
  column1 INT NOT NULL,
  column2 VARCHAR(100) NOT NULL
)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Table",
    "query": "DROP TABLE table1",
  },
  Object {
    "formatter": "sql",
    "label": "Add Column",
    "query": "ALTER TABLE
  table1
ADD
  COLUMN newColumn1 varchar(200)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Column",
    "query": "ALTER TABLE
  table1 DROP COLUMN id;
ALTER TABLE
  table1 DROP COLUMN column1;
ALTER TABLE
  table1 DROP COLUMN column2;",
  },
]
`;

exports[`Scripts RmdbScripts - mssql 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Database",
    "query": "DROP DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Create Database",
    "query": "CREATE DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  TOP 200 *
FROM
  table1",
  },
  Object {
    "formatter": "sql",
    "label": "Select Count",
    "query": "SELECT
  COUNT(*)
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  TOP 200 id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Distinct",
    "query": "SELECT
  DISTINCT TOP 200 column1
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (column1, column2)
VALUES
  ('_column1_', '_column2_')",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Table",
    "query": "CREATE TABLE table1 (
  id INT PRIMARY KEY NOT NULL,
  column1 INT NOT NULL,
  column2 VARCHAR(100) NOT NULL
)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Table",
    "query": "DROP TABLE table1",
  },
  Object {
    "formatter": "sql",
    "label": "Add Column",
    "query": "ALTER TABLE
  table1
ADD
  COLUMN newColumn1 NVARCHAR(200)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Column",
    "query": "ALTER TABLE
  table1 DROP COLUMN id;
ALTER TABLE
  table1 DROP COLUMN column1;
ALTER TABLE
  table1 DROP COLUMN column2;",
  },
]
`;

exports[`Scripts RmdbScripts - mysql 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Database",
    "query": "DROP DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Create Database",
    "query": "CREATE DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  *
FROM
  table1
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Count",
    "query": "SELECT
  COUNT(*)
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Distinct",
    "query": "SELECT
  DISTINCT column1
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (column1, column2)
VALUES
  ('_column1_', '_column2_')",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Table",
    "query": "CREATE TABLE table1 (
  id INT PRIMARY KEY NOT NULL,
  column1 INT NOT NULL,
  column2 VARCHAR(100) NOT NULL
)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Table",
    "query": "DROP TABLE table1",
  },
  Object {
    "formatter": "sql",
    "label": "Add Column",
    "query": "ALTER TABLE
  table1
ADD
  COLUMN newColumn1 varchar(200)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Column",
    "query": "ALTER TABLE
  table1 DROP COLUMN id;
ALTER TABLE
  table1 DROP COLUMN column1;
ALTER TABLE
  table1 DROP COLUMN column2;",
  },
]
`;

exports[`Scripts RmdbScripts - postgres 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Database",
    "query": "DROP DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Create Database",
    "query": "CREATE DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  *
FROM
  table1
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Count",
    "query": "SELECT
  COUNT(*)
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Distinct",
    "query": "SELECT
  DISTINCT column1
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (column1, column2)
VALUES
  ('_column1_', '_column2_')",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Table",
    "query": "CREATE TABLE table1 (
  id INT NOT NULL,
  column1 INT NOT NULL,
  column2 VARCHAR(100) NOT NULL
)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Table",
    "query": "DROP TABLE table1",
  },
  Object {
    "formatter": "sql",
    "label": "Add Column",
    "query": "ALTER TABLE
  table1
ADD
  COLUMN newColumn1 CHAR(200)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Column",
    "query": "ALTER TABLE
  table1 DROP COLUMN id;
ALTER TABLE
  table1 DROP COLUMN column1;
ALTER TABLE
  table1 DROP COLUMN column2;",
  },
]
`;

exports[`Scripts RmdbScripts - sqlite 1`] = `
Array [
  Object {
    "description": "Selected the related database and connection.",
    "icon": <Memo />,
    "label": "Select",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Database",
    "query": "DROP DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Create Database",
    "query": "CREATE DATABASE database1",
  },
  Object {
    "formatter": "sql",
    "label": "Select All Columns",
    "query": "SELECT
  *
FROM
  table1
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Count",
    "query": "SELECT
  COUNT(*)
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Select Specific Columns",
    "query": "SELECT
  id,
  column1,
  column2
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "formatter": "sql",
    "label": "Select Distinct",
    "query": "SELECT
  DISTINCT column1
FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''
LIMIT
  200",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Insert",
    "query": "INSERT INTO
  table1 (column1, column2)
VALUES
  ('_column1_', '_column2_')",
  },
  Object {
    "formatter": "js",
    "label": "Update",
    "query": "UPDATE table1
SET id = '',
  column1 = '',
  column2 = ''
WHERE id = ''
AND
column1 = ''
AND
column2 = ''",
  },
  Object {
    "formatter": "sql",
    "label": "Delete",
    "query": "DELETE FROM
  table1
WHERE
  id = ''
  AND column1 = ''
  AND column2 = ''",
  },
  Object {
    "label": "divider",
  },
  Object {
    "formatter": "sql",
    "label": "Create Table",
    "query": "CREATE TABLE table1 (
  id INT PRIMARY KEY NOT NULL,
  column1 INT NOT NULL,
  column2 VARCHAR(100) NOT NULL
)",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Table",
    "query": "DROP TABLE table1",
  },
  Object {
    "formatter": "sql",
    "label": "Add Column",
    "query": "ALTER TABLE
  table1
ADD
  COLUMN newColumn1 TEXT",
  },
  Object {
    "formatter": "sql",
    "label": "Drop Column",
    "query": "ALTER TABLE
  table1 DROP COLUMN id;
ALTER TABLE
  table1 DROP COLUMN column1;
ALTER TABLE
  table1 DROP COLUMN column2;",
  },
]
`;
