on:
  workflow_dispatch:
    inputs:
      message:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create_release:
    runs-on: ubuntu-latest
    timeout-minutes: 4
    outputs:
      package_version: ${{ steps.package-version.outputs.current-version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm version --no-git-tag-version patch
      - id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: '.'
      - uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: '${{ steps.package-version.outputs.current-version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: ${{ steps.package-version.outputs.current-version }}
          body: |
            ${{ github.event.inputs.message }}
          draft: false
          prerelease: false

  build_windows:
    needs: [create_release]
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm version --no-git-tag-version patch
      - run: yarn install --network-timeout 1000000 --frozen-lockfile
      - run: yarn test-ci
      - run: yarn build

      # package and distribute .exe
      - run: yarn dist
      - run: mv ./dist/sqlui-native*.exe ./dist/sqlui-native.exe
      - name: Upload release binary .exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.exe
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.exe
          asset_content_type: application/octet-stream
      - name: Upload artifact .exe
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.exe
          path: ./dist/sqlui-native.exe

      # package and distribute .appx
      - run: yarn dist-win32-appx
      - run: mv ./dist/sqlui-native*.appx ./dist/sqlui-native.appx
      - name: Upload release binary .appx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.appx
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.appx
          asset_content_type: application/octet-stream

      - name: Upload artifact .appx
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.appx
          path: ./dist/sqlui-native.appx

  build_macos:
    needs: [create_release]
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm version --no-git-tag-version patch
      - run: yarn install --network-timeout 1000000 --frozen-lockfile
      - run: yarn test-ci
      - run: yarn build
      - run: yarn dist
      - run: mv ./dist/sqlui-native*.dmg ./dist/sqlui-native.dmg

      - name: Upload release binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.dmg
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.dmg
          asset_content_type: application/octet-stream

      - name: Upload artifact .dmg
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.dmg
          path: ./dist/sqlui-native.dmg

  build_linux:
    needs: [create_release]
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: install missing dependencies
        run: sudo apt-get install -y libarchive-tools
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm version --no-git-tag-version patch
      - run: yarn install --network-timeout 1000000 --frozen-lockfile
      - run: yarn test-ci
      - run: yarn build
      - run: yarn dist
      - run: |
          mv ./dist/sqlui-native*.deb ./dist/sqlui-native.deb
          mv ./dist/sqlui-native*.rpm ./dist/sqlui-native.rpm
          mv ./dist/sqlui-native*.snap ./dist/sqlui-native.snap
          mv ./dist/sqlui-native*.pacman ./dist/sqlui-native.pacman
      - name: Upload artifact .deb
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.deb
          path: ./dist/sqlui-native.deb
      - name: Upload artifact .rpm
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.rpm
          path: ./dist/sqlui-native.rpm
      - name: Upload artifact .snap
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.snap
          path: ./dist/sqlui-native.snap
      - name: Upload artifact .pacman
        uses: actions/upload-artifact@v3
        with:
          name: sqlui-native.pacman
          path: ./dist/sqlui-native.pacman
      - name: Upload release binary deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.deb
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.deb
          asset_content_type: application/octet-stream
      - name: Upload release binary rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.rpm
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.rpm
          asset_content_type: application/octet-stream
      - name: Upload release binary snap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.snap
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.snap
          asset_content_type: application/octet-stream
      - name: Upload release binary pacman
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ./dist/sqlui-native.pacman
          asset_name: sqlui-native-${{ needs.create_release.outputs.package_version }}.pacman
          asset_content_type: application/octet-stream

  publish:
    needs: [create_release, build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm version --no-git-tag-version patch
      - run: |
          echo "{ \"version\": \"${{ needs.create_release.outputs.package_version }}\" }" > release.json
      - uses: EndBug/add-and-commit@v8
        with:
          message: 'CI / CD - New Release ${{needs.create_release.outputs.package_version}} [skip ci]'

  roll_back_on_failure_or_canceled:
    if: failure() || cancelled()
    needs: [create_release, build_windows, build_macos, build_linux]
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v3
      - uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: '${{ needs.create_release.outputs.package_version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
